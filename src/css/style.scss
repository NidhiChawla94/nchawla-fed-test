.container {
  padding: 2px 16px;
}
.content {
  font-family: sans-serif;
  .title {
    text-align: center;
  }
  .card {
    /* Add shadows to create the "card" effect */
    display: flex;
    flex-direction: column;
    img {
      width: 100%;
      height: auto;
      height: auto;
      transform: scale(0.9);
      padding: 0 6px;
      float: left;
      width: 24.99999%;
    }
  }
  
  .user-container {
    border: 2px solid #dedede;
    background-color: #f1f1f1;
    border-radius: 5px;
    padding: 10px;
    margin: 10px 0;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    transition: 0.3s;
    &:hover { 
      box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
    }
  }
  .user-container::after {
    content: "";
    clear: both;
    display: table;
  }
  .user-container img {
    float: left;
    max-width: 78px;
    width: 100%;
    margin-right: 20px;
    border-radius: 50%;
    height: 50%;
    /* margin-top: auto; */
    /* margin-bottom: auto; */
    margin-top: 2%;
  }
  
}
@media only screen and (min-width: 768px) {
  .content {
    .card {
      flex-direction: row;
    }
  }
}
.mt-3 {
  margin-top: 1.5rem;
}
.btn {
    color: #fff;
    background-color: #007bff;
    border: 1px solid #007bff;
    display: inline-block;
    font-weight: 400;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    
    padding: .375rem .75rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: .25rem;
    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
.w-100 {
  width:100%
}
.text-center {
  text-align:center
}
$numColumns: 12;
$gutterWidth: 15px;
  
.row{
  display: grid;
  grid-template-columns: repeat($numColumns, 5fr); // Uniform columns. No need for rounded percentages to calculate widths.
  grid-gap: $gutterWidth; // Actual gutter width. No need for negative margin hack.
}
.show-grid [class^=col-]{
  padding-top: 10px;
  padding-bottom: 10px;
  background-color: #eee;
  background-color: rgba(86,61,124,.15);
  border: 1px solid #ddd;
  border: 1px solid rgba(86,61,124,.2);
}

[class^=col-]{
  grid-column-end: span $numColumns; //Full width fallback when no column size is define for the screen size.
}


@each $size, $abbr in (0,xs),(768px,sm),(992px,md),(1200px,lg){
  @media (min-width: $size){
    
    @for $i from 1 through $numColumns{
      .col-#{$abbr}-#{$i}{
        grid-column-end: span $i;
      }
      
    }
  }
}